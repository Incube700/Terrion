class_name BattleUI
extends CanvasLayer

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–º–∞–Ω–¥–∏—Ä–∞ TERRION - drag&drop —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∑–¥–∞–Ω–∏–π
# –°–æ–ª–¥–∞—Ç—ã —Å–ø–∞–≤–Ω—è—Ç—Å—è –∏–∑ –∫–∞–∑–∞—Ä–º, –∞ –Ω–µ –Ω–∞–ø—Ä—è–º—É—é

signal start_battle
signal build_structure_drag(screen_pos)
signal use_ability(ability_name: String, position: Vector3)
signal summon_hero()
signal use_race_ability(ability_name, position)

var drag_type = ""
var is_dragging = false
var drag_start_pos = Vector2.ZERO
var ghost_preview = null

@onready var main_menu = $MainMenu
@onready var game_panel = $Panel
@onready var ability_panel = $AbilityPanel

func _ready():
	print("üñ•Ô∏è –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–º–∞–Ω–¥–∏—Ä–∞ —Å drag&drop –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...")
	
	# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
	var start_game_button = get_node("MainMenu/MenuContainer/StartGameButton")
	var exit_button = get_node("MainMenu/MenuContainer/ExitButton")
	
	if start_game_button:
		start_game_button.pressed.connect(_on_start_game_pressed)
		print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É' –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")
	
	if exit_button:
		exit_button.pressed.connect(_on_exit_pressed)
		print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–í—ã—Ö–æ–¥' –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")

	# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∑–¥–∞–Ω–∏–π —Å drag&drop
	setup_building_buttons()
	setup_ability_buttons()
	
	# –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
	add_drag_drop_instructions()

func setup_building_buttons():
	# –ö–Ω–æ–ø–∫–∏ –∑–¥–∞–Ω–∏–π –¥–ª—è drag&drop
	$Panel/MainButtonContainer/SpawnSoldierButton.text = "üè∞ –ö–ê–ó–ê–†–ú–´\nüí∞ 80 —ç–Ω–µ—Ä–≥–∏–∏\n–ü—Ä–æ–∏–∑–≤–æ–¥—è—Ç —Å–æ–ª–¥–∞—Ç"
	$Panel/MainButtonContainer/SpawnSoldierButton.gui_input.connect(_on_barracks_button_input)
	
	$Panel/MainButtonContainer/CollectorButton.text = "üèÉ –¶–ï–ù–¢–† –ö–û–õ–õ–ï–ö–¢–û–†–û–í\nüí∞ 90‚ö° + 15üíé\n–ü—Ä–æ–∏–∑–≤–æ–¥—è—Ç –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–æ–≤"
	$Panel/MainButtonContainer/CollectorButton.gui_input.connect(_on_collector_center_button_input)
	
	$Panel/MainButtonContainer/BuildTowerButton.text = "üóº –ë–ê–®–ù–Ø\nüí∞ 60 —ç–Ω–µ—Ä–≥–∏–∏\n–û–±–æ—Ä–æ–Ω–∞"
	$Panel/MainButtonContainer/BuildTowerButton.gui_input.connect(_on_tower_button_input)
	
	$Panel/MainButtonContainer/EliteSoldierButton.text = "üéñÔ∏è –¢–†–ï–ù–ò–†–û–í–û–ß–ù–´–ô –õ–ê–ì–ï–†–¨\nüí∞ 120‚ö° + 20üíé\n–ü—Ä–æ–∏–∑–≤–æ–¥—è—Ç —ç–ª–∏—Ç–Ω—ã—Ö —Å–æ–ª–¥–∞—Ç"
	$Panel/MainButtonContainer/EliteSoldierButton.gui_input.connect(_on_training_camp_button_input)
	
	$Panel/MainButtonContainer/CrystalMageButton.text = "üîÆ –ú–ê–ì–ò–ß–ï–°–ö–ê–Ø –ê–ö–ê–î–ï–ú–ò–Ø\nüí∞ 100‚ö° + 30üíé\n–ü—Ä–æ–∏–∑–≤–æ–¥—è—Ç –º–∞–≥–æ–≤"
	$Panel/MainButtonContainer/CrystalMageButton.gui_input.connect(_on_magic_academy_button_input)
	
	print("‚úÖ –ö–Ω–æ–ø–∫–∏ –∑–¥–∞–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –Ω–∞ drag&drop")

func setup_ability_buttons():
	# –ë–∞–∑–æ–≤—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
	if has_node("AbilityPanel/AbilityContainer"):
		if $AbilityPanel/AbilityContainer.has_node("FireballButton"):
			$AbilityPanel/AbilityContainer/FireballButton.text = "üî• –û–ì–ù–ï–ù–ù–´–ô –®–ê–†\nüí∞ 40‚ö° + 15üíé"
			$AbilityPanel/AbilityContainer/FireballButton.pressed.connect(_on_fireball_ability)
		
		if $AbilityPanel/AbilityContainer.has_node("HealButton"):
			$AbilityPanel/AbilityContainer/HealButton.text = "üíö –õ–ï–ß–ï–ù–ò–ï\nüí∞ 30‚ö° + 10üíé"
			$AbilityPanel/AbilityContainer/HealButton.pressed.connect(_on_heal_ability)
		
		if $AbilityPanel/AbilityContainer.has_node("ShieldButton"):
			$AbilityPanel/AbilityContainer/ShieldButton.text = "üõ°Ô∏è –©–ò–¢\nüí∞ 50‚ö° + 20üíé"
			$AbilityPanel/AbilityContainer/ShieldButton.pressed.connect(_on_shield_ability)
	
	# –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–∑—ã–≤–∞ –≥–µ—Ä–æ—è (—Å–∫—Ä—ã—Ç–∞ –¥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É—Å–ª–æ–≤–∏–π)
	create_hero_summon_button()

func create_hero_summon_button():
	# –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏–∑—ã–≤–∞ –≥–µ—Ä–æ—è
	if not has_node("AbilityPanel/AbilityContainer"):
		return
	
	var ability_container = $AbilityPanel/AbilityContainer
	
	var hero_button = Button.new()
	hero_button.name = "HeroSummonButton"
	hero_button.text = "ü¶∏ –ü–†–ò–ó–í–ê–¢–¨ –ì–ï–†–û–Ø\n‚è∞ –ù—É–∂–µ–Ω –∞–ª—Ç–∞—Ä—å"
	hero_button.size = Vector2(140, 60)
	hero_button.add_theme_font_size_override("font_size", 16)
	hero_button.disabled = true  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
	hero_button.modulate = Color(0.5, 0.5, 0.5, 0.7)  # –ù–µ–∞–∫—Ç–∏–≤–Ω–∞
	
	hero_button.pressed.connect(_on_hero_summon_pressed)
	ability_container.add_child(hero_button)
	
	print("ü¶∏ –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–∑—ã–≤–∞ –≥–µ—Ä–æ—è —Å–æ–∑–¥–∞–Ω–∞ (–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞)")

# Drag&drop –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∑–¥–∞–Ω–∏–π
func _on_barracks_button_input(event):
	_handle_building_drag(event, "barracks", $Panel/MainButtonContainer/SpawnSoldierButton)

func _on_collector_center_button_input(event):
	_handle_building_drag(event, "collector_facility", $Panel/MainButtonContainer/CollectorButton)

func _on_tower_button_input(event):
	_handle_building_drag(event, "tower", $Panel/MainButtonContainer/BuildTowerButton)

func _on_training_camp_button_input(event):
	_handle_building_drag(event, "training_camp", $Panel/MainButtonContainer/EliteSoldierButton)

func _on_magic_academy_button_input(event):
	_handle_building_drag(event, "magic_academy", $Panel/MainButtonContainer/CrystalMageButton)

func _handle_building_drag(event, building_type: String, button: Button):
	if event is InputEventMouseButton and event.button_index == MOUSE_BUTTON_LEFT:
		if event.pressed:
			# –ù–∞—á–∞–ª–æ drag-–æ–ø–µ—Ä–∞—Ü–∏–∏
			drag_type = building_type
			is_dragging = true
			drag_start_pos = event.position
			button.modulate = Color.YELLOW  # –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
			create_ghost_preview(building_type)
			print("üèóÔ∏è –ù–∞—á–∞–ª–æ drag ", building_type, " - –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç—É")
		else:
			# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ drag - —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∑–¥–∞–Ω–∏—è
			if is_dragging and drag_type == building_type:
				print("üèóÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ drag ", building_type, " –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏: ", event.position)
				build_structure_drag.emit(event.position)
			is_dragging = false
			drag_type = ""
			destroy_ghost_preview()
			button.modulate = Color.WHITE  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ü–≤–µ—Ç

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
func _on_fireball_ability():
	print("üî• –û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä!")
	use_ability.emit("fireball", Vector3(0, 0, -10))

func _on_heal_ability():
	print("üíö –õ–µ—á–µ–Ω–∏–µ —Å–æ—é–∑–Ω–∏–∫–æ–≤!")
	use_ability.emit("heal_wave", Vector3(0, 0, 10))

func _on_shield_ability():
	print("üõ°Ô∏è –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π —â–∏—Ç!")
	use_ability.emit("shield_barrier", Vector3(0, 0, 10))

func _on_hero_summon_pressed():
	print("ü¶∏ –ü—Ä–∏–∑—ã–≤ –≥–µ—Ä–æ—è!")
	summon_hero.emit()

func update_info(player_hp, player_energy, enemy_hp, enemy_energy, player_crystals = 0, enemy_crystals = 0):
	# HUD —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
	$PlayerHUD.text = "üü¶ –ò–ì–†–û–ö | ‚ö°%d | üíé%d | ‚ù§Ô∏è%d" % [player_energy, player_crystals, player_hp]
	$EnemyHUD.text = "üü• –í–†–ê–ì | ‚ö°%d | üíé%d | ‚ù§Ô∏è%d" % [enemy_energy, enemy_crystals, enemy_hp]
	
	# –¶–≤–µ—Ç–æ–≤–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è
	$PlayerHUD.modulate = Color(0.7, 0.9, 1.0)
	$EnemyHUD.modulate = Color(1.0, 0.7, 0.7)
	
	# –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–Ω–æ–ø–æ–∫
	update_button_availability(player_energy, player_crystals)

func update_button_availability(energy: int, crystals: int):
	# –ö–∞–∑–∞—Ä–º—ã
	update_single_button("Panel/MainButtonContainer/SpawnSoldierButton", energy >= 80)
	
	# –¶–µ–Ω—Ç—Ä –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–æ–≤
	update_single_button("Panel/MainButtonContainer/CollectorButton", energy >= 90 and crystals >= 15)
	
	# –ë–∞—à–Ω—è
	update_single_button("Panel/MainButtonContainer/BuildTowerButton", energy >= 60)
	
	# –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –ª–∞–≥–µ—Ä—å
	update_single_button("Panel/MainButtonContainer/EliteSoldierButton", energy >= 120 and crystals >= 20)
	
	# –ú–∞–≥–∏—á–µ—Å–∫–∞—è –∞–∫–∞–¥–µ–º–∏—è
	update_single_button("Panel/MainButtonContainer/CrystalMageButton", energy >= 100 and crystals >= 30)
	
	# –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
	if has_node("AbilityPanel/AbilityContainer"):
		update_single_button("AbilityPanel/AbilityContainer/FireballButton", energy >= 40 and crystals >= 15)
		update_single_button("AbilityPanel/AbilityContainer/HealButton", energy >= 30 and crystals >= 10)
		update_single_button("AbilityPanel/AbilityContainer/ShieldButton", energy >= 50 and crystals >= 20)

func update_single_button(button_path: String, can_afford: bool):
	if has_node(button_path):
		var button = get_node(button_path)
		if can_afford:
			button.modulate = Color(1.0, 1.0, 1.0, 1.0)
		else:
			button.modulate = Color(0.5, 0.5, 0.5, 0.7)
		button.disabled = not can_afford

func enable_hero_summon():
	# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏–∑—ã–≤–∞ –≥–µ—Ä–æ—è –∫–æ–≥–¥–∞ –∞–ª—Ç–∞—Ä—å –≥–æ—Ç–æ–≤
	var hero_button = get_node_or_null("AbilityPanel/AbilityContainer/HeroSummonButton")
	if hero_button:
		hero_button.disabled = false
		hero_button.modulate = Color(1.0, 1.0, 1.0, 1.0)
		hero_button.text = "ü¶∏ –ü–†–ò–ó–í–ê–¢–¨ –ì–ï–†–û–Ø\n‚è∞ –ì–æ—Ç–æ–≤!"
		print("ü¶∏ –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–∑—ã–≤–∞ –≥–µ—Ä–æ—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")

func add_hero_ability_buttons():
	# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π –≥–µ—Ä–æ—è –ø–æ—Å–ª–µ –µ–≥–æ –ø—Ä–∏–∑—ã–≤–∞
	if not has_node("AbilityPanel/AbilityContainer"):
		return
	
	var ability_container = $AbilityPanel/AbilityContainer
	
	# –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å 1: –ë–æ–µ–≤–æ–π –∫–ª–∏—á
	var battle_cry_button = Button.new()
	battle_cry_button.name = "BattleCryButton"
	battle_cry_button.text = "‚öîÔ∏è –ë–û–ï–í–û–ô –ö–õ–ò–ß\nüí™ +50% —É—Ä–æ–Ω–∞"
	battle_cry_button.size = Vector2(140, 60)
	battle_cry_button.add_theme_font_size_override("font_size", 14)
	battle_cry_button.pressed.connect(_on_battle_cry_pressed)
	ability_container.add_child(battle_cry_button)
	
	# –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å 2: –ú–∞—Å—Å–æ–≤–æ–µ –ª–µ—á–µ–Ω–∏–µ
	var mass_heal_button = Button.new()
	mass_heal_button.name = "MassHealButton"
	mass_heal_button.text = "üíö –ú–ê–°–°–û–í–û–ï –õ–ï–ß–ï–ù–ò–ï\nüîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ—Ö"
	mass_heal_button.size = Vector2(140, 60)
	mass_heal_button.add_theme_font_size_override("font_size", 14)
	mass_heal_button.pressed.connect(_on_mass_heal_pressed)
	ability_container.add_child(mass_heal_button)
	
	# –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å 3: –£–¥–∞—Ä–Ω–∞—è –≤–æ–ª–Ω–∞
	var shockwave_button = Button.new()
	shockwave_button.name = "ShockwaveButton"
	shockwave_button.text = "üí• –£–î–ê–†–ù–ê–Ø –í–û–õ–ù–ê\n‚ö° –û–±–ª–∞—Å—Ç—å —É—Ä–æ–Ω–∞"
	shockwave_button.size = Vector2(140, 60)
	shockwave_button.add_theme_font_size_override("font_size", 14)
	shockwave_button.pressed.connect(_on_shockwave_pressed)
	ability_container.add_child(shockwave_button)
	
	print("ü¶∏ –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –≥–µ—Ä–æ—è –¥–æ–±–∞–≤–ª–µ–Ω—ã!")

func _on_battle_cry_pressed():
	print("‚öîÔ∏è –ë–æ–µ–≤–æ–π –∫–ª–∏—á –≥–µ—Ä–æ—è!")
	use_ability.emit("battle_cry", Vector3(0, 0, 10))

func _on_mass_heal_pressed():
	print("üíö –ú–∞—Å—Å–æ–≤–æ–µ –ª–µ—á–µ–Ω–∏–µ!")
	use_ability.emit("mass_heal", Vector3(0, 0, 10))

func _on_shockwave_pressed():
	print("üí• –£–¥–∞—Ä–Ω–∞—è –≤–æ–ª–Ω–∞!")
	use_ability.emit("shockwave", Vector3(0, 0, -10))

func _input(event):
	# –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –ø—Ä–∏–∑—Ä–∞—á–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
	if is_dragging and ghost_preview:
		if event is InputEventMouseMotion:
			var mouse_pos = get_viewport().get_mouse_position()
			ghost_preview.position = mouse_pos - ghost_preview.size / 2
			
			# –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –ø–æ–∑–∏—Ü–∏–∏
			var can_build = can_build_at_position(mouse_pos)
			if can_build:
				ghost_preview.color = get_building_color(drag_type)
				ghost_preview.color.a = 0.7
			else:
				ghost_preview.color = Color.RED
				ghost_preview.color.a = 0.5

func create_ghost_preview(building_type: String):
	# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–∑—Ä–∞—á–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∑–¥–∞–Ω–∏—è
	ghost_preview = ColorRect.new()
	ghost_preview.size = Vector2(60, 60)
	ghost_preview.color = get_building_color(building_type)
	ghost_preview.color.a = 0.5
	ghost_preview.z_index = 100
	
	# –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –∑–¥–∞–Ω–∏—è
	var label = Label.new()
	label.text = get_building_emoji(building_type)
	label.add_theme_font_size_override("font_size", 32)
	label.anchors_preset = Control.PRESET_CENTER
	ghost_preview.add_child(label)
	
	add_child(ghost_preview)
	print("üëª –°–æ–∑–¥–∞–Ω –ø—Ä–∏–∑—Ä–∞—á–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –¥–ª—è ", building_type)

func destroy_ghost_preview():
	if ghost_preview:
		ghost_preview.queue_free()
		ghost_preview = null

func get_building_color(building_type: String) -> Color:
	match building_type:
		"barracks": return Color.CYAN
		"tower": return Color.ORANGE
		"training_camp": return Color.GOLD
		"magic_academy": return Color.MAGENTA
		"collector_facility": return Color.GREEN
		_: return Color.WHITE

func get_building_emoji(building_type: String) -> String:
	match building_type:
		"barracks": return "üè∞"
		"tower": return "üóº"
		"training_camp": return "üéñÔ∏è"
		"magic_academy": return "üîÆ"
		"collector_facility": return "üèÉ"
		_: return "üèóÔ∏è"

func can_build_at_position(screen_pos: Vector2) -> bool:
	# –ú–æ–∂–Ω–æ —Å—Ç—Ä–æ–∏—Ç—å —Ç–æ–ª—å–∫–æ –≤ –Ω–∏–∂–Ω–µ–π –ø–æ–ª–æ–≤–∏–Ω–µ —ç–∫—Ä–∞–Ω–∞ (–∏–≥—Ä–æ–∫)
	var screen_size = get_viewport().get_visible_rect().size
	return screen_pos.y > screen_size.y * 0.5

func _on_start_game_pressed():
	print("üöÄ === –ù–ê–ß–ê–õ–û –ò–ì–†–´ –° DRAG&DROP ===")
	main_menu.visible = false
	game_panel.visible = true
	ability_panel.visible = true
	$PlayerHUD.visible = true
	$EnemyHUD.visible = true
	
	# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
	var instructions = get_node_or_null("DragDropInstructions")
	if instructions:
		instructions.visible = true
	
	start_battle.emit()
	print("üéÆ –ò–≥—Ä–∞ —Å drag&drop –∑–∞–ø—É—â–µ–Ω–∞!")

func _on_exit_pressed():
	print("üö™ –í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã")
	get_tree().quit()

func add_drag_drop_instructions():
	# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è drag&drop
	var instructions = Label.new()
	instructions.name = "DragDropInstructions"
	instructions.text = """üéÆ DRAG & DROP –£–ü–†–ê–í–õ–ï–ù–ò–ï:
üñ±Ô∏è –ü–ö–ú + –¥—Ä–∞–≥ = –∫–∞–º–µ—Ä–∞
üéÆ –°–∫—Ä–æ–ª–ª = –∑—É–º
üèóÔ∏è –ó–ê–ñ–ú–ò –ò –ü–ï–†–ï–¢–ê–©–ò –∫–Ω–æ–ø–∫—É –∑–¥–∞–Ω–∏—è!
1Ô∏è‚É£ –ó–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –∑–¥–∞–Ω–∏—è
2Ô∏è‚É£ –ü–µ—Ä–µ—Ç–∞—â–∏ –Ω–∞ –∫–∞—Ä—Ç—É
3Ô∏è‚É£ –û—Ç–ø—É—Å—Ç–∏ = –ø–æ—Å—Ç—Ä–æ–π–∫–∞!

üè∞ –ö–∞–∑–∞—Ä–º—ã –ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç —Å–æ–ª–¥–∞—Ç
ü¶∏ –ì–µ—Ä–æ–π: –∑–∞—Ö–≤–∞—Ç–∏ 2 –±–æ–∫–æ–≤—ã—Ö —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏!"""
	
	instructions.anchors_preset = Control.PRESET_TOP_RIGHT
	instructions.position = Vector2(-400, 10)
	instructions.size = Vector2(390, 180)
	instructions.add_theme_font_size_override("font_size", 16)
	instructions.add_theme_color_override("font_color", Color.YELLOW)
	instructions.add_theme_color_override("font_shadow_color", Color.BLACK)
	instructions.add_theme_constant_override("shadow_offset_x", 2)
	instructions.add_theme_constant_override("shadow_offset_y", 2)
	instructions.visible = false
	
	add_child(instructions)

func show_main_menu():
	# –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
	main_menu.visible = true
	game_panel.visible = false
	ability_panel.visible = false
	$PlayerHUD.visible = false
	$EnemyHUD.visible = false
