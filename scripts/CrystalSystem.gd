extends Node
class_name CrystalSystem

# –ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ TERRION RTS
# –ó–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Å—Ç—ã–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –Ω–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏

signal crystal_captured(crystal_id: int, new_owner: String, crystal_type: int)
signal crystal_depleted(crystal_id: int)

var crystals: Array[Dictionary] = []
var crystal_meshes: Array[MeshInstance3D] = []
var battle_manager = null

# –¢–∏–ø—ã –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
enum CrystalType {
	MAIN_CRYSTAL,         # –ì–ª–∞–≤–Ω—ã–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã (—Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏)
	ENERGY_CRYSTAL,       # –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã
	UNSTABLE_CRYSTAL,     # –ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –¥–ª—è —Å—É–ø–µ—Ä-–≤–æ–π—Å–∫
	VOID_CRYSTAL          # –ö—Ä–∏—Å—Ç–∞–ª–ª—ã –ø—É—Å—Ç–æ—Ç—ã –¥–ª—è —É–ª—å—Ç–∏–º–∞—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
}

func _ready():
	print("üíé –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–æ–π –°–∏—Å—Ç–µ–º—ã...")
	create_crystal_field()
	
	# –¢–∞–π–º–µ—Ä –¥–ª—è —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
	var regen_timer = Timer.new()
	regen_timer.wait_time = 2.0
	regen_timer.autostart = true
	regen_timer.timeout.connect(_on_crystal_regeneration)
	add_child(regen_timer)
	
	# –¢–∞–π–º–µ—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
	var resource_timer = Timer.new()
	resource_timer.wait_time = 3.0
	resource_timer.autostart = true
	resource_timer.timeout.connect(_on_resource_generation)
	add_child(resource_timer)

func create_crystal_field():
	# –°–æ–∑–¥–∞–µ–º —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–ª–µ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
	var crystal_configs = [
		# === –ì–õ–ê–í–ù–´–ï –ö–†–ò–°–¢–ê–õ–õ–´ (—Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏) ===
		{"name": "–ì–ª–∞–≤–Ω—ã–π –ö—Ä–∏—Å—Ç–∞–ª–ª –Æ–≥", "pos": Vector3(0, 1, 25), "type": CrystalType.MAIN_CRYSTAL, "capacity": 10000, "regen": 0, "radius": 8.0},
		{"name": "–ì–ª–∞–≤–Ω—ã–π –ö—Ä–∏—Å—Ç–∞–ª–ª –°–µ–≤–µ—Ä", "pos": Vector3(0, 1, -25), "type": CrystalType.MAIN_CRYSTAL, "capacity": 10000, "regen": 0, "radius": 8.0},
		
		# === –≠–ù–ï–†–ì–ï–¢–ò–ß–ï–°–ö–ò–ï –ö–†–ò–°–¢–ê–õ–õ–´ (–æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã) ===
		{"name": "energy_1", "pos": Vector3(-15, 1, 10), "type": CrystalType.ENERGY_CRYSTAL, "capacity": 5000, "regen": 10, "radius": 6.0},
		{"name": "energy_2", "pos": Vector3(15, 1, 10), "type": CrystalType.ENERGY_CRYSTAL, "capacity": 5000, "regen": 10, "radius": 6.0},
		{"name": "energy_3", "pos": Vector3(-15, 1, -10), "type": CrystalType.ENERGY_CRYSTAL, "capacity": 5000, "regen": 10, "radius": 6.0},
		{"name": "energy_4", "pos": Vector3(15, 1, -10), "type": CrystalType.ENERGY_CRYSTAL, "capacity": 5000, "regen": 10, "radius": 6.0},
		
		# === –ù–ï–°–¢–ê–ë–ò–õ–¨–ù–´–ï –ö–†–ò–°–¢–ê–õ–õ–´ (–¥–ª—è —Å—É–ø–µ—Ä-–≤–æ–π—Å–∫) ===
		{"name": "–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ö—Ä–∏—Å—Ç–∞–ª–ª –õ–µ–≤–æ", "pos": Vector3(-8, 1, 0), "type": CrystalType.UNSTABLE_CRYSTAL, "capacity": 800, "regen": 2, "radius": 4.0},
		{"name": "–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ö—Ä–∏—Å—Ç–∞–ª–ª –ü—Ä–∞–≤–æ", "pos": Vector3(8, 1, 0), "type": CrystalType.UNSTABLE_CRYSTAL, "capacity": 800, "regen": 2, "radius": 4.0},
		{"name": "–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ö—Ä–∏—Å—Ç–∞–ª–ª –¶–µ–Ω—Ç—Ä", "pos": Vector3(0, 1, 0), "type": CrystalType.UNSTABLE_CRYSTAL, "capacity": 1000, "regen": 2, "radius": 5.0},
		
		# === –ö–†–ò–°–¢–ê–õ–õ–´ –ü–£–°–¢–û–¢–´ (–¥–ª—è —É–ª—å—Ç–∏–º–∞—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π) ===
		{"name": "–ö—Ä–∏—Å—Ç–∞–ª–ª –ü—É—Å—Ç–æ—Ç—ã –ê–ª—å—Ñ–∞", "pos": Vector3(-5, 1, 5), "type": CrystalType.VOID_CRYSTAL, "capacity": 500, "regen": 1, "radius": 3.0},
		{"name": "–ö—Ä–∏—Å—Ç–∞–ª–ª –ü—É—Å—Ç–æ—Ç—ã –ë–µ—Ç–∞", "pos": Vector3(5, 1, -5), "type": CrystalType.VOID_CRYSTAL, "capacity": 500, "regen": 1, "radius": 3.0},
	]
	
	for i in range(crystal_configs.size()):
		var config = crystal_configs[i]
		var crystal = create_crystal(i, config["pos"], config["type"], config["capacity"], config["regen"], config["radius"])
		crystals.append(crystal)

func create_crystal(id: int, position: Vector3, type: CrystalType, capacity: int, regen_rate: int, radius: float) -> Dictionary:
	var crystal = {
		"id": id,
		"position": position,
		"type": type,
		"owner": "neutral",
		"max_capacity": capacity,
		"current_capacity": capacity,
		"regeneration_rate": regen_rate,
		"control_radius": radius,
		"capture_progress": 0.0,
		"max_capture_time": get_capture_time(type),
		"instability": 0.0,  # –î–ª—è –ø—Å–∏-–∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
		"growth_level": 1.0,  # –î–ª—è –±–∏–æ-–∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
		"contamination": 0.0  # –î–ª—è –±–∏–æ-–∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
	}
	
	# –°–æ–∑–¥–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
	create_crystal_visual(crystal)
	
	return crystal

func get_capture_time(type: CrystalType) -> float:
	match type:
		CrystalType.MAIN_CRYSTAL:
			return 10.0  # –ó–∞—Ö–≤–∞—Ç: 10 —Å–µ–∫ ‚Üí –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ: 15 —Å–µ–∫
		CrystalType.ENERGY_CRYSTAL:
			return 5.0   # –ó–∞—Ö–≤–∞—Ç: 5 —Å–µ–∫ ‚Üí –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ: 7.5 —Å–µ–∫
		CrystalType.UNSTABLE_CRYSTAL:
			return 8.0   # –ó–∞—Ö–≤–∞—Ç: 8 —Å–µ–∫ ‚Üí –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ: 12 —Å–µ–∫
		CrystalType.VOID_CRYSTAL:
			return 4.0   # –ó–∞—Ö–≤–∞—Ç: 4 —Å–µ–∫ ‚Üí –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ: 6 —Å–µ–∫
		_:
			return 5.0

func create_crystal_visual(crystal: Dictionary):
	var mesh_instance = MeshInstance3D.new()
	
	# –†–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
	match crystal.type:
		CrystalType.MAIN_CRYSTAL:
			var sphere = SphereMesh.new()
			sphere.radius = crystal.control_radius * 0.8
			sphere.height = crystal.control_radius * 1.6
			mesh_instance.mesh = sphere
		CrystalType.ENERGY_CRYSTAL:
			var cylinder = CylinderMesh.new()
			cylinder.top_radius = crystal.control_radius * 0.6
			cylinder.bottom_radius = crystal.control_radius * 0.8
			cylinder.height = crystal.control_radius * 1.2
			mesh_instance.mesh = cylinder
		CrystalType.UNSTABLE_CRYSTAL:
			var box = BoxMesh.new()
			box.size = Vector3(crystal.control_radius, crystal.control_radius * 1.5, crystal.control_radius)
			mesh_instance.mesh = box
		CrystalType.VOID_CRYSTAL:
			var capsule = CapsuleMesh.new()
			capsule.radius = crystal.control_radius * 0.5
			capsule.height = crystal.control_radius * 1.8
			mesh_instance.mesh = capsule
	
	mesh_instance.position = crystal.position
	
	# –°–æ–∑–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –º–µ—Ç–∫—É
	var label = Label3D.new()
	label.text = get_crystal_info_text(crystal)
	label.position = crystal.position + Vector3(0, crystal.control_radius + 2, 0)
	label.billboard = BaseMaterial3D.BILLBOARD_ENABLED
	label.font_size = 96
	label.modulate = Color.WHITE
	label.horizontal_alignment = HORIZONTAL_ALIGNMENT_CENTER
	label.outline_size = 15
	label.outline_modulate = Color.BLACK
	label.name = "Crystal_" + str(crystal.id) + "_Label"
	get_parent().add_child(label)
	
	# –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ü–≤–µ—Ç–∞
	var material = StandardMaterial3D.new()
	match crystal.type:
		CrystalType.MAIN_CRYSTAL:
			material.albedo_color = Color(1.0, 0.8, 0.0, 0.9)  # –ó–æ–ª–æ—Ç–æ–π
			material.emission = Color(0.8, 0.6, 0.0)
		CrystalType.ENERGY_CRYSTAL:
			material.albedo_color = Color(0.0, 0.9, 1.0, 0.9)  # –Ø—Ä–∫–æ-–≥–æ–ª—É–±–æ–π
			material.emission = Color(0.0, 0.7, 1.0)
		CrystalType.UNSTABLE_CRYSTAL:
			material.albedo_color = Color(1.0, 0.5, 0.0, 0.9)  # –û—Ä–∞–Ω–∂–µ–≤—ã–π –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π
			material.emission = Color(1.0, 0.3, 0.0)
		CrystalType.VOID_CRYSTAL:
			material.albedo_color = Color(0.3, 0.0, 0.8, 0.9)  # –¢–µ–º–Ω–æ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π –ø—É—Å—Ç–æ—Ç–∞
			material.emission = Color(0.5, 0.0, 1.0)
	
	material.flags_transparent = true
	material.emission_enabled = true
	material.emission_energy = 2.5
	mesh_instance.set_surface_override_material(0, material)
	
	get_parent().add_child(mesh_instance)
	crystal_meshes.append(mesh_instance)

func get_crystal_info_text(crystal: Dictionary) -> String:
	var type_name = ""
	var bonus_info = ""
	
	match crystal.type:
		CrystalType.MAIN_CRYSTAL:
			type_name = "üëë –ì–õ–ê–í–ù–´–ô"
			bonus_info = "–ö–æ–º–∞–Ω–¥–Ω—ã–π —Ü–µ–Ω—Ç—Ä"
		CrystalType.ENERGY_CRYSTAL:
			type_name = "‚ö° –≠–ù–ï–†–ì–ò–Ø"
			bonus_info = "+" + str(get_resource_rate(crystal.type)) + "/—Å–µ–∫"
		CrystalType.UNSTABLE_CRYSTAL:
			type_name = "‚ö†Ô∏è –ù–ï–°–¢–ê–ë–ò–õ–¨–ù–´–ô"
			bonus_info = "+25 –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤"
		CrystalType.VOID_CRYSTAL:
			type_name = "üåå –ü–£–°–¢–û–¢–ê"
			bonus_info = "+50 –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤"
	
	var capacity_percent = int((float(crystal.current_capacity) / float(crystal.max_capacity)) * 100.0)
	return type_name + "\n" + bonus_info + "\n" + str(capacity_percent) + "%"

func _on_crystal_regeneration():
	for crystal in crystals:
		if crystal.current_capacity < crystal.max_capacity and crystal.regeneration_rate > 0:
			# –ë–∞–∑–æ–≤–∞—è —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è
			crystal.current_capacity += crystal.regeneration_rate
			crystal.current_capacity = min(crystal.current_capacity, crystal.max_capacity)
			
			# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
			apply_crystal_regeneration_effects(crystal)
			
			# –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª
			update_crystal_visual(crystal)

func apply_crystal_regeneration_effects(crystal: Dictionary):
	match crystal.type:
		CrystalType.ENERGY_CRYSTAL:
			# –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –º–æ–≥—É—Ç —Ä–∞—Å—Ç–∏ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –µ–º–∫–æ—Å—Ç—å
			if crystal.growth_level < 2.0 and randf() < 0.05:  # 5% —à–∞–Ω—Å —Ä–æ—Å—Ç–∞
				crystal.growth_level += 0.1
				crystal.max_capacity = int(crystal.max_capacity * 1.05)  # +5% –∫ –µ–º–∫–æ—Å—Ç–∏
				print("üå± –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –∫—Ä–∏—Å—Ç–∞–ª–ª ", crystal.id, " –≤—ã—Ä–æ—Å! –ù–æ–≤–∞—è –µ–º–∫–æ—Å—Ç—å: ", crystal.max_capacity)

func _on_resource_generation():
	for crystal in crystals:
		if crystal.owner != "neutral":
			apply_crystal_effects(crystal)

func apply_crystal_effects(crystal: Dictionary):
	if not battle_manager:
		return
	
	var crystal_owner = crystal.owner
	var amount = get_resource_rate(crystal.type)
	
	match crystal.type:
		CrystalType.MAIN_CRYSTAL:
			# –ì–ª–∞–≤–Ω—ã–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –¥–∞—é—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –¥–æ—Ö–æ–¥
			add_resource(crystal_owner, "energy", amount)
			add_resource(crystal_owner, "crystals", int(float(amount) / 2.0))
			
		CrystalType.ENERGY_CRYSTAL:
			# –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –¥–∞—é—Ç —ç–Ω–µ—Ä–≥–∏—é
			add_resource(crystal_owner, "energy", amount)
			# –¢—Ä–∞—Ç–∏–º –µ–º–∫–æ—Å—Ç—å –∫—Ä–∏—Å—Ç–∞–ª–ª–∞
			crystal.current_capacity -= amount
			if crystal.current_capacity <= 0:
				crystal.current_capacity = 0
				crystal_depleted.emit(crystal.id)
			
		CrystalType.UNSTABLE_CRYSTAL:
			# –ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –¥–∞—é—Ç –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –¥–ª—è —Å—É–ø–µ—Ä-–≤–æ–π—Å–∫
			add_resource(crystal_owner, "crystals", 25)
			
		CrystalType.VOID_CRYSTAL:
			# –ö—Ä–∏—Å—Ç–∞–ª–ª—ã –ø—É—Å—Ç–æ—Ç—ã –¥–∞—é—Ç –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –¥–ª—è —É–ª—å—Ç–∏–º–∞—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
			add_resource(crystal_owner, "crystals", 50)

func get_resource_rate(type: CrystalType) -> int:
	match type:
		CrystalType.MAIN_CRYSTAL:
			return 20  # –ì–ª–∞–≤–Ω—ã–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –¥–∞—é—Ç –º–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–æ–≤
		CrystalType.ENERGY_CRYSTAL:
			return 25  # –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã - –æ—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫
		CrystalType.UNSTABLE_CRYSTAL:
			return 10  # –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ - –º–µ–Ω—å—à–µ, –Ω–æ —Ü–µ–Ω–Ω–µ–µ
		CrystalType.VOID_CRYSTAL:
			return 15  # –ë–∏–æ-–∫—Ä–∏—Å—Ç–∞–ª–ª—ã - —Å—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥
		_:
			return 0

func add_resource(crystal_owner: String, resource_type: String, amount: int):
	if not battle_manager:
		return
		
	match resource_type:
		"energy":
			if crystal_owner == "player":
				battle_manager.player_energy += amount
			else:
				battle_manager.enemy_energy += amount
		"crystals":
			if crystal_owner == "player":
				battle_manager.player_crystals += amount
			else:
				battle_manager.enemy_crystals += amount

func attempt_capture(crystal: Dictionary, team: String):
	if crystal.owner == team:
		return  # –£–∂–µ –∑–∞—Ö–≤–∞—á–µ–Ω —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π
	
	# –õ–æ–≥–∏–∫–∞ –∑–∞—Ö–≤–∞—Ç–∞ –∫—Ä–∏—Å—Ç–∞–ª–ª–∞
	crystal.capture_progress += 1.0
	
	if crystal.capture_progress >= crystal.max_capture_time:
		var old_owner = crystal.owner
		crystal.owner = team
		crystal.capture_progress = 0.0
		
		# –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª
		update_crystal_visual(crystal)
		
		# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –∑–∞—Ö–≤–∞—Ç–µ
		apply_capture_effects(crystal, old_owner, team)
		
		crystal_captured.emit(crystal.id, team, crystal.type)
		print("üíé –ö—Ä–∏—Å—Ç–∞–ª–ª ", crystal.id, " (", get_crystal_type_name(crystal.type), ") –∑–∞—Ö–≤–∞—á–µ–Ω –∫–æ–º–∞–Ω–¥–æ–π ", team)
		
		# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –ø–æ–±–µ–¥—ã
		if battle_manager:
			battle_manager.call_deferred("check_victory_conditions")

func apply_capture_effects(crystal: Dictionary, old_owner: String, new_owner: String):
	# –ò—Å–ø–æ–ª—å–∑—É–µ–º old_owner –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
	print("üíé –ö—Ä–∏—Å—Ç–∞–ª–ª –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –æ—Ç ", old_owner, " –∫ ", new_owner)
	
	match crystal.type:
		CrystalType.MAIN_CRYSTAL:
			# –ó–∞—Ö–≤–∞—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–∞ - –º–æ—â–Ω—ã–π –±–æ–Ω—É—Å
			if new_owner == "player":
				show_notification("üëë –ì–ª–∞–≤–Ω—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª –∑–∞—Ö–≤–∞—á–µ–Ω! –ú–æ—â–Ω—ã–π –±–æ–Ω—É—Å –∫ —Ä–µ—Å—É—Ä—Å–∞–º!")
			deploy_command_center(crystal, new_owner)
			
		CrystalType.UNSTABLE_CRYSTAL:
			# –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∫—Ä–∏—Å—Ç–∞–ª–ª –¥–∞–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –±–æ–Ω—É—Å
			add_resource(new_owner, "crystals", 100)
			show_notification("üî¨ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ä—ã–≤! +100 –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤!")
			
		CrystalType.VOID_CRYSTAL:
			# –ë–∏–æ-–∫—Ä–∏—Å—Ç–∞–ª–ª –ª–µ—á–∏—Ç –≤—Å–µ—Ö —Å–æ—é–∑–Ω—ã—Ö —é–Ω–∏—Ç–æ–≤
			heal_all_friendly_units(new_owner)
			show_notification("üåø –ë–∏–æ-–∫—Ä–∏—Å—Ç–∞–ª–ª –ª–µ—á–∏—Ç –≤–∞—à–∏ –≤–æ–π—Å–∫–∞!")

func update_crystal_visual(crystal: Dictionary):
	var mesh_index = crystal.id
	if mesh_index < crystal_meshes.size():
		var mesh = crystal_meshes[mesh_index]
		var material = mesh.get_surface_override_material(0)
		
		# –ò–∑–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞
		if crystal.owner == "player":
			material.albedo_color = material.albedo_color.lerp(Color(0.2, 0.6, 1.0, 0.9), 0.5)
		elif crystal.owner == "enemy":
			material.albedo_color = material.albedo_color.lerp(Color(1.0, 0.2, 0.2, 0.9), 0.5)
		else:
			# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ü–≤–µ—Ç
			restore_original_crystal_color(crystal, material)
	
	# –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –º–µ—Ç–∫—É
	update_crystal_label(crystal)

func restore_original_crystal_color(crystal: Dictionary, material: StandardMaterial3D):
	match crystal.type:
		CrystalType.MAIN_CRYSTAL:
			material.albedo_color = Color(1.0, 0.8, 0.0, 0.9)
		CrystalType.ENERGY_CRYSTAL:
			material.albedo_color = Color(0.0, 0.9, 1.0, 0.9)
		CrystalType.UNSTABLE_CRYSTAL:
			material.albedo_color = Color(1.0, 0.5, 0.0, 0.9)
		CrystalType.VOID_CRYSTAL:
			material.albedo_color = Color(0.3, 0.0, 0.8, 0.9)

func update_crystal_label(crystal: Dictionary):
	var label_name = "Crystal_" + str(crystal.id) + "_Label"
	var label = get_parent().get_node_or_null(label_name)
	if label:
		label.text = get_crystal_info_text(crystal)

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
func deploy_command_center(crystal: Dictionary, team_owner: String):
	print("üèóÔ∏è –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ –¥–ª—è ", team_owner, " –Ω–∞ –∫—Ä–∏—Å—Ç–∞–ª–ª–µ ", crystal.id)

func boost_tech_research(team_owner: String):
	print("üî¨ –£—Å–∫–æ—Ä–µ–Ω–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –¥–ª—è ", team_owner)

func heal_nearby_units(pos: Vector3, team_owner: String, search_radius: float):
	print("üíö –õ–µ—á–µ–Ω–∏–µ —é–Ω–∏—Ç–æ–≤ ", team_owner, " –≤ —Ä–∞–¥–∏—É—Å–µ ", search_radius, " –æ—Ç –ø–æ–∑–∏—Ü–∏–∏ ", pos)

func heal_all_friendly_units(team_owner: String):
	print("üíö –õ–µ—á–µ–Ω–∏–µ –≤—Å–µ—Ö —é–Ω–∏—Ç–æ–≤ ", team_owner)

func reduce_ability_cooldowns(team_owner: String):
	print("‚è∞ –°–Ω–∏–∂–µ–Ω–∏–µ –∫—É–ª–¥–∞—É–Ω–æ–≤ –¥–ª—è ", team_owner)

func reset_all_cooldowns(team_owner: String):
	print("‚ö° –°–±—Ä–æ—Å –≤—Å–µ—Ö –∫—É–ª–¥–∞—É–Ω–æ–≤ –¥–ª—è ", team_owner)

func teleport_nearby_units(pos: Vector3, search_radius: float):
	print("üåÄ –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è —é–Ω–∏—Ç–æ–≤ –≤ —Ä–∞–¥–∏—É—Å–µ ", search_radius, " –æ—Ç ", pos)

func disable_nearby_crystals(pos: Vector3, search_radius: float, effect_duration: float):
	print("üí´ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –≤ —Ä–∞–¥–∏—É—Å–µ ", search_radius, " –Ω–∞ ", effect_duration, " —Å–µ–∫—É–Ω–¥ –æ—Ç ", pos)

func show_notification(message: String):
	print("üì¢ ", message)
	if battle_manager and battle_manager.notification_system:
		battle_manager.notification_system.show_notification(message)

# –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å BattleManager
func get_crystal_info() -> Array[Dictionary]:
	return crystals

func get_controlled_crystals(team: String) -> int:
	var count = 0
	for crystal in crystals:
		if crystal.owner == team:
			count += 1
	return count

func force_capture_crystal(crystal_id: int, crystal_owner: String):
	if crystal_id < 0 or crystal_id >= crystals.size():
		return false
		
	var crystal = crystals[crystal_id]
	crystal.owner = crystal_owner
	crystal.capture_progress = 0.0
	
	update_crystal_visual(crystal)
	
	crystal_captured.emit(crystal.id, crystal_owner, crystal.type)
	print("üíé –ö—Ä–∏—Å—Ç–∞–ª–ª ", crystal_id, " –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞—Ö–≤–∞—á–µ–Ω –∫–æ–º–∞–Ω–¥–æ–π ", crystal_owner)
	return true

# –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫—Ä–∏—Å—Ç–∞–ª–ª–∞–º–∏ –¥–ª—è –≤—Å–µ—Ö —é–Ω–∏—Ç–æ–≤
func check_crystal_interaction(unit_position: Vector3, team: String, unit_type: String):
	for crystal in crystals:
		var distance = unit_position.distance_to(crystal.position)
		if distance <= crystal.control_radius:
			if unit_type == "collector":
				# –ö–æ–ª–ª–µ–∫—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –∫—Ä–∏—Å—Ç–∞–ª–ª—ã
				attempt_collector_capture(crystal, team)
			else:
				# –û–±—ã—á–Ω—ã–µ —é–Ω–∏—Ç—ã –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –æ—Å–≤–æ–±–æ–∂–¥–∞—Ç—å –≤—Ä–∞–∂–µ—Å–∫–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã
				attempt_crystal_liberation(crystal, team)

# –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ó–∞—Ö–≤–∞—Ç –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞–º–∏ (–ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –∑–∞—Ö–≤–∞—Ç)
func attempt_collector_capture(crystal: Dictionary, team: String):
	if crystal.owner == team:
		return  # –£–∂–µ –∑–∞—Ö–≤–∞—á–µ–Ω —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π
	
	# –ö–æ–ª–ª–µ–∫—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –ª—é–±—ã–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã (–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –∏ –≤—Ä–∞–∂–µ—Å–∫–∏–µ)
	crystal.capture_progress += 1.0
	
	if crystal.capture_progress >= crystal.max_capture_time:
		var old_owner = crystal.owner
		crystal.owner = team
		crystal.capture_progress = 0.0
		
		# –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª
		update_crystal_visual(crystal)
		
		# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –∑–∞—Ö–≤–∞—Ç–µ
		apply_capture_effects(crystal, old_owner, team)
		
		crystal_captured.emit(crystal.id, team, crystal.type)
		var crystal_type_name = get_crystal_type_name(crystal.type)
		print("üíé –ö–æ–ª–ª–µ–∫—Ç–æ—Ä ", team, " –∑–∞—Ö–≤–∞—Ç–∏–ª –∫—Ä–∏—Å—Ç–∞–ª–ª ", crystal.id, " (", crystal_type_name, ")")
		
		# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –ø–æ–±–µ–¥—ã
		if battle_manager:
			battle_manager.call_deferred("check_victory_conditions")

# –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –æ–±—ã—á–Ω—ã–º–∏ —é–Ω–∏—Ç–∞–º–∏
func attempt_crystal_liberation(crystal: Dictionary, team: String):
	# –û–±—ã—á–Ω—ã–µ —é–Ω–∏—Ç—ã –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –æ—Å–≤–æ–±–æ–∂–¥–∞—Ç—å –í–†–ê–ñ–ï–°–ö–ò–ï –∫—Ä–∏—Å—Ç–∞–ª–ª—ã (–¥–µ–ª–∞—Ç—å –∏—Ö –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–º–∏)
	if crystal.owner == "neutral" or crystal.owner == team:
		return  # –ù–µ–ª—å–∑—è –æ—Å–≤–æ–±–æ–∂–¥–∞—Ç—å —Å–≤–æ–∏ –∏–ª–∏ —É–∂–µ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã
	
	# –ò–ó–ú–ï–ù–ï–ù–ò–ï: –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ç–µ–ø–µ—Ä—å –î–û–õ–¨–®–ï –∑–∞—Ö–≤–∞—Ç–∞ (–≤ 1.5 —Ä–∞–∑–∞)
	var liberation_time = crystal.max_capture_time * 1.5
	crystal.capture_progress += 1.0
	
	# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–∞ –∫—Ä–∏—Å—Ç–∞–ª–ª–µ —Ç—É—Ä–µ–ª–∏ –∏–ª–∏ –∑–¥–∞–Ω–∏—è
	if has_defensive_structures_on_crystal(crystal):
		# –ï—Å–ª–∏ –µ—Å—Ç—å —Ç—É—Ä–µ–ª–∏/–∑–¥–∞–Ω–∏—è - —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –∏—Ö —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å
		show_notification("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ —É–Ω–∏—á—Ç–æ–∂—å—Ç–µ —Ç—É—Ä–µ–ª–∏ –∏ –∑–¥–∞–Ω–∏—è –Ω–∞ –∫—Ä–∏—Å—Ç–∞–ª–ª–µ!")
		return
	
	if crystal.capture_progress >= liberation_time:
		var old_owner = crystal.owner
		crystal.owner = "neutral"  # –î–µ–ª–∞–µ–º –∫—Ä–∏—Å—Ç–∞–ª–ª –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–º
		crystal.capture_progress = 0.0
		
		# –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª
		update_crystal_visual(crystal)
		
		# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è
		apply_liberation_effects(crystal, old_owner, team)
		
		crystal_captured.emit(crystal.id, "neutral", crystal.type)
		var crystal_type_name = get_crystal_type_name(crystal.type)
		print("‚öîÔ∏è –Æ–Ω–∏—Ç ", team, " –æ—Å–≤–æ–±–æ–¥–∏–ª –∫—Ä–∏—Å—Ç–∞–ª–ª ", crystal.id, " (", crystal_type_name, ") –æ—Ç ", old_owner, " –∑–∞ ", liberation_time, " —Å–µ–∫—É–Ω–¥")
		
		# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
		if battle_manager and battle_manager.notification_system:
			battle_manager.notification_system.show_notification("–ö—Ä–∏—Å—Ç–∞–ª–ª " + crystal_type_name + " –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω –ø–æ—Å–ª–µ –¥–æ–ª–≥–æ–π –æ—Å–∞–¥—ã!")

# –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–±–æ—Ä–æ–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–æ—Ä—É–∂–µ–Ω–∏–π –Ω–∞ –∫—Ä–∏—Å—Ç–∞–ª–ª–µ
func has_defensive_structures_on_crystal(crystal: Dictionary) -> bool:
	var crystal_position = crystal.position
	var search_radius = crystal.control_radius + 2.0  # –ù–µ–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ —Ä–∞–¥–∏—É—Å–∞ –∫—Ä–∏—Å—Ç–∞–ª–ª–∞
	
	# –ò—â–µ–º —Ç—É—Ä–µ–ª–∏ (–ø—Ä–µ–≤—Ä–∞—â–µ–Ω–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä—ã)
	var turrets = get_tree().get_nodes_in_group("turrets")
	for turret in turrets:
		if turret.team != crystal.owner:
			continue  # –ù–µ –Ω–∞—à–∞ —Ç—É—Ä–µ–ª—å
		var distance = crystal_position.distance_to(turret.global_position)
		if distance <= search_radius:
			return true
	
	# –ò—â–µ–º –∑–¥–∞–Ω–∏—è/—Å–ø–∞–≤–Ω–µ—Ä—ã
	var spawners = get_tree().get_nodes_in_group("spawners")
	for spawner in spawners:
		if spawner.team != crystal.owner:
			continue  # –ù–µ –Ω–∞—à–µ –∑–¥–∞–Ω–∏–µ
		var distance = crystal_position.distance_to(spawner.global_position)
		if distance <= search_radius:
			return true
	
	# –ò—â–µ–º –¥—Ä—É–≥–∏–µ –æ–±–æ—Ä–æ–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
	var buildings = get_tree().get_nodes_in_group("buildings")
	for building in buildings:
		if "team" in building and building.team != crystal.owner:
			continue  # –ù–µ –Ω–∞—à–µ –∑–¥–∞–Ω–∏–µ
		var distance = crystal_position.distance_to(building.global_position)
		if distance <= search_radius:
			return true
	
	return false  # –ù–µ—Ç –æ–±–æ—Ä–æ–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–æ—Ä—É–∂–µ–Ω–∏–π

# –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ get_capture_time
func get_liberation_time(type: CrystalType) -> float:
	# –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ç–µ–ø–µ—Ä—å –î–û–õ–¨–®–ï –∑–∞—Ö–≤–∞—Ç–∞ (–≤ 1.5 —Ä–∞–∑–∞)
	var base_capture_time = get_capture_time(type)
	return base_capture_time * 1.5

# –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –≠—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–∏ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
func apply_liberation_effects(crystal: Dictionary, previous_owner: String, liberating_team: String):
	print("‚öîÔ∏è –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª–∞ ", crystal.id, " –æ—Ç ", previous_owner, " –∫–æ–º–∞–Ω–¥–æ–π ", liberating_team)
	
	match crystal.type:
		CrystalType.MAIN_CRYSTAL:
			# –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–∞ - –º–æ—â–Ω—ã–π —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ö–æ–¥
			show_notification("üëë –ì–ª–∞–≤–Ω—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω! –í—Ä–∞–≥ –ø–æ—Ç–µ—Ä—è–ª –∫–æ–º–∞–Ω–¥–Ω—ã–π —Ü–µ–Ω—Ç—Ä!")
			
		CrystalType.ENERGY_CRYSTAL:
			# –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –∫—Ä–∏—Å—Ç–∞–ª–ª –ø–µ—Ä–µ—Å—Ç–∞–µ—Ç –¥–∞–≤–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã –≤—Ä–∞–≥—É
			show_notification("‚ö° –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –∫—Ä–∏—Å—Ç–∞–ª–ª –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω!")
			
		CrystalType.UNSTABLE_CRYSTAL:
			# –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∫—Ä–∏—Å—Ç–∞–ª–ª - –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –≤—Ä–∞–≥–∞
			show_notification("üî¨ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∫—Ä–∏—Å—Ç–∞–ª–ª –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω! –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤—Ä–∞–≥–∞ –ø—Ä–µ—Ä–≤–∞–Ω—ã!")
			
		CrystalType.VOID_CRYSTAL:
			# –ë–∏–æ-–∫—Ä–∏—Å—Ç–∞–ª–ª –ø–µ—Ä–µ—Å—Ç–∞–µ—Ç –ª–µ—á–∏—Ç—å –≤—Ä–∞–≥–æ–≤
			show_notification("üåø –ë–∏–æ-–∫—Ä–∏—Å—Ç–∞–ª–ª –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω! –í—Ä–∞–≥ –ø–æ—Ç–µ—Ä—è–ª –ª–µ—á–µ–Ω–∏–µ!")

# –û–±–Ω–æ–≤–ª—è–µ–º –ø—É–±–ª–∏—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ Unit.gd
func check_crystal_capture(unit_position: Vector3, team: String, unit_type: String = "soldier"):
	# –ù–æ–≤–∞—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —é–Ω–∏—Ç–æ–≤
	check_crystal_interaction(unit_position, team, unit_type)

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ —Ç–∏–ø–∞ –∫—Ä–∏—Å—Ç–∞–ª–ª–∞
func get_crystal_type_name(crystal_type: int) -> String:
	match crystal_type:
		CrystalType.MAIN_CRYSTAL: return "MAIN_CRYSTAL"
		CrystalType.ENERGY_CRYSTAL: return "ENERGY_CRYSTAL"
		CrystalType.UNSTABLE_CRYSTAL: return "UNSTABLE_CRYSTAL"
		CrystalType.VOID_CRYSTAL: return "VOID_CRYSTAL"
		_: return "UNKNOWN" 
 
