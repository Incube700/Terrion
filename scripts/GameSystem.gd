class_name GameSystem
extends Node

# GameSystem ‚Äî –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º TERRION
# –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –µ–¥–∏–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏ –æ–±—â—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å

@export var system_name: String = ""
@export var enabled: bool = true

var battle_manager = null
var is_initialized: bool = false

signal system_ready
signal system_error(error_message: String)

func _ready():
	if enabled:
		initialize_system()

# –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã
func initialize_system():
	print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã: ", system_name)
	is_initialized = true
	system_ready.emit()

# –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–∏—Å—Ç–µ–º—ã
func cleanup_system():
	print("üßπ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã: ", system_name)
	is_initialized = false

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π —Ç–æ–ª—å–∫–æ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
func safe_execute(operation: Callable, error_msg: String = ""):
	if not is_initialized or not enabled:
		if error_msg:
			print("‚ö†Ô∏è ", error_msg)
		return false
	
	# –í—ã–ø–æ–ª–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
	if operation.is_valid():
		operation.call()
		return true
	else:
		system_error.emit("–û—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ " + system_name + ": " + error_msg)
		return false

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã
func get_system_status() -> Dictionary:
	return {
		"name": system_name,
		"enabled": enabled,
		"initialized": is_initialized,
		"node_count": get_child_count()
	}

# –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
func set_system_enabled(value: bool):
	enabled = value
	if not enabled and is_initialized:
		cleanup_system()
	elif enabled and not is_initialized:
		initialize_system() 