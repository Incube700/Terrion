extends Node

# –£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è TerritorySystem v2
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —Ç–∏–ø—ã —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π –∏ –∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ

var territory_system: TerritorySystem

func _ready():
	print("üß™ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TERRITORY SYSTEM V2 ===")
	
	# –°–æ–∑–¥–∞–µ–º TerritorySystem
	territory_system = TerritorySystem.new()
	territory_system.battle_manager = self
	add_child(territory_system)
	
	# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
	territory_system.territory_captured.connect(_on_territory_captured)
	territory_system.territory_depleted.connect(_on_territory_depleted)
	
	# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
	var timer = Timer.new()
	timer.wait_time = 1.0
	timer.one_shot = true
	timer.timeout.connect(run_comprehensive_tests)
	add_child(timer)
	timer.start()

func run_comprehensive_tests():
	print("üß™ === –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ===")
	
	# –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π
	test_territory_creation()
	
	# –¢–µ—Å—Ç 2: –ó–∞—Ö–≤–∞—Ç —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π
	test_territory_capture()
	
	# –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
	test_resource_generation()
	
	# –¢–µ—Å—Ç 4: –ü—Ä–∏–∑—ã–≤ –≥–µ—Ä–æ—è
	test_hero_summon()
	
	# –¢–µ—Å—Ç 5: –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
	test_special_territories()
	
	print("üß™ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")

func test_territory_creation():
	print("üìã –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π")
	
	var territories = territory_system.get_territory_info()
	print("‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π: ", territories.size())
	
	# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–∏–ø—ã —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π
	var territory_counts = {
		"ENERGY_MINE": 0,
		"CRYSTAL_MINE": 0,
		"VOID_CRYSTAL": 0,
		"CENTER_TRIGGER_1": 0,
		"CENTER_TRIGGER_2": 0,
		"ANCIENT_TOWER": 0,
		"ANCIENT_ALTAR": 0,
		"BATTLEFIELD_SHRINE": 0,
		"DEFENSIVE_TOWER": 0,
		"FACTORY": 0,
		"PLAYER_BASE": 0,
		"ENEMY_BASE": 0
	}
	
	for territory in territories:
		var type_name = TerritorySystem.TerritoryType.keys()[territory.type]
		territory_counts[type_name] = territory_counts.get(type_name, 0) + 1
	
	# –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
	for type_name in territory_counts:
		if territory_counts[type_name] > 0:
			print("‚úÖ ", type_name, ": ", territory_counts[type_name])
	
	# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã —Å–æ–∑–¥–∞–Ω—ã
	assert(territory_counts["ENERGY_MINE"] >= 4, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Ä—É–¥–Ω–∏–∫–æ–≤")
	assert(territory_counts["CRYSTAL_MINE"] >= 2, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–∏—Å—Ç–∞–ª—å–Ω—ã—Ö —Ä—É–¥–Ω–∏–∫–æ–≤")
	assert(territory_counts["PLAYER_BASE"] == 1, "–ë–∞–∑–∞ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
	assert(territory_counts["ENEMY_BASE"] == 1, "–ë–∞–∑–∞ –≤—Ä–∞–≥–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")

func test_territory_capture():
	print("üìã –¢–µ—Å—Ç 2: –ó–∞—Ö–≤–∞—Ç —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π")
	
	var territories = territory_system.get_territory_info()
	
	# –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π —Ä—É–¥–Ω–∏–∫
	for i in range(territories.size()):
		var territory = territories[i]
		if territory.type == TerritorySystem.TerritoryType.ENERGY_MINE and territory.owner == "neutral":
			print("üéØ –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π —Ä—É–¥–Ω–∏–∫ ID=", i)
			territory_system.force_capture_territory(i, "player")
			break
	
	# –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∫—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π —Ä—É–¥–Ω–∏–∫
	for i in range(territories.size()):
		var territory = territories[i]
		if territory.type == TerritorySystem.TerritoryType.CRYSTAL_MINE and territory.owner == "neutral":
			print("üíé –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∫—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π —Ä—É–¥–Ω–∏–∫ ID=", i)
			territory_system.force_capture_territory(i, "player")
			break

func test_resource_generation():
	print("üìã –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤")
	
	# –°–∏–º—É–ª–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ä–µ—Å—É—Ä—Å–æ–≤
	territory_system._on_resource_generation()
	
	# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ä–µ—Å—É—Ä—Å—ã –¥–æ–±–∞–≤–∏–ª–∏—Å—å
	print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞")

func test_hero_summon():
	print("üìã –¢–µ—Å—Ç 4: –ü—Ä–∏–∑—ã–≤ –≥–µ—Ä–æ—è")
	
	var territories = territory_system.get_territory_info()
	var trigger_1_id = -1
	var trigger_2_id = -1
	
	# –ò—â–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã –≥–µ—Ä–æ—è
	for i in range(territories.size()):
		var territory = territories[i]
		if territory.type == TerritorySystem.TerritoryType.CENTER_TRIGGER_1:
			trigger_1_id = i
		elif territory.type == TerritorySystem.TerritoryType.CENTER_TRIGGER_2:
			trigger_2_id = i
	
	if trigger_1_id >= 0 and trigger_2_id >= 0:
		print("üéØ –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è –ø—Ä–∏–∑—ã–≤–∞ –≥–µ—Ä–æ—è")
		territory_system.force_capture_territory(trigger_1_id, "player")
		territory_system.force_capture_territory(trigger_2_id, "player")
		
		# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –ø—Ä–∏–∑—ã–≤–∞ –≥–µ—Ä–æ—è
		territory_system.check_hero_summon_conditions()
		print("‚úÖ –ü—Ä–∏–∑—ã–≤ –≥–µ—Ä–æ—è –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω")
	else:
		print("‚ùå –¢—Ä–∏–≥–≥–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

func test_special_territories():
	print("üìã –¢–µ—Å—Ç 5: –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏")
	
	var territories = territory_system.get_territory_info()
	
	# –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞—à–Ω—é –ø—Ä–µ–¥—Ç–µ—á
	for i in range(territories.size()):
		var territory = territories[i]
		if territory.type == TerritorySystem.TerritoryType.ANCIENT_TOWER:
			print("üèõÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞—à–Ω—é –ø—Ä–µ–¥—Ç–µ—á ID=", i)
			territory_system.force_capture_territory(i, "player")
			break
	
	# –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫—Ä–∏—Å—Ç–∞–ª–ª –ø—É—Å—Ç–æ—Ç—ã
	for i in range(territories.size()):
		var territory = territories[i]
		if territory.type == TerritorySystem.TerritoryType.VOID_CRYSTAL:
			print("üåå –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫—Ä–∏—Å—Ç–∞–ª–ª –ø—É—Å—Ç–æ—Ç—ã ID=", i)
			territory_system.force_capture_territory(i, "player")
			break
	
	print("‚úÖ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
func _on_territory_captured(territory_id: int, team: String, territory_type: int):
	var type_name = TerritorySystem.TerritoryType.keys()[territory_type]
	print("üè≥Ô∏è –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è ", territory_id, " (", type_name, ") –∑–∞—Ö–≤–∞—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–æ–π ", team)

func _on_territory_depleted(territory_id: int):
	print("üè≥Ô∏è –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è ", territory_id, " –∏—Å—Ç–æ—â–µ–Ω–∞")

# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
var player_energy = 100
var player_crystals = 0
var enemy_energy = 100
var enemy_crystals = 0
var hero_summoned = false
var notification_system = null
var effect_system = null

func spawn_unit_at_pos(team: String, position: Vector3, unit_type: String):
	print("üéØ –°–ø–∞–≤–Ω —é–Ω–∏—Ç–∞ ", unit_type, " –¥–ª—è –∫–æ–º–∞–Ω–¥—ã ", team)

func check_victory_conditions():
	print("üèÜ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –ø–æ–±–µ–¥—ã")

func update_ui():
	print("ÔøΩÔøΩÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI") 